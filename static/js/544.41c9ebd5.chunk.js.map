{"version":3,"file":"static/js/544.41c9ebd5.chunk.js","mappings":"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","sources":["components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/Pagination/Pagination.jsx","constants/iconSize.js","pages/Home/Home.jsx","services/api.js","utils/renderIcons.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Movie = styled.img`\n  object-fit: cover;\n  border-radius: 2px;\n  width:370px;\n  height: 555px;\n  \n`;\n\nexport const MovieTitle = styled.p`\n  padding: 20px;\n  font-size: 26px;\n  font-weight: 900;\n  color: black;\n  text-align: center;\n  margin: 0;\n  flex-grow: 1;\n`;\nexport const MovieYear= styled.span`\n  background-color: #fc458e; \n  color: white;\n  font-size: 26px ;\n  font-weight: 700;\n  position: absolute;\n  top:0;\n  left: 0;\n  padding: 5px;\n  border-bottom-right-radius: 5px;\n  \n`;\n\nexport const Rate = styled.div`\n  position: absolute;\n  top:10px;\n  right: 10px;\n`   \n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgressBar } from \"@tomickigrzegorz/react-circular-progress-bar\";\nimport { Movie, MovieTitle,MovieYear, Rate} from \"./MovieGalleryItem.styled\"\n\n\nexport const MovieGalleryItem =({movie}) => {\n  const { poster_path, title, vote_average, release_date} = movie;\n  const releaseYear = release_date !== '' ? parseInt(release_date) : null;\n  const userScore = Math.round(vote_average * 10);\n  return (\n    <>\n      \n        <Movie\n            src={poster_path\n            ? `https://image.tmdb.org/t/p/original${poster_path}`\n            :  `https://img.freepik.com/free-vector/coming-soon-shop-announcement-vector_53876-57828.jpg`}\n            alt={`Movie ${title} poster`}\n        />\n\n      \n      <MovieTitle>{title} </MovieTitle>\n      {releaseYear && <MovieYear > {releaseYear} </MovieYear>}\n      {vote_average !== 0 &&\n        <Rate>\n          <CircularProgressBar\n          className='movie_rating'\n          percent={userScore}\n          animationOff='true'\n          size={60}\n          fontSize=\"28px\"\n          fontWeight={700}\n          fill=\"white\"\n          colorCircle='#e6e6e6s'\n          linearGradient={[\"red\", \"pink\"]}\n        />\n      </Rate>\n      }\n\n    </>\n    )\n\n}\n   MovieGalleryItem.propTypes = {\n    movie: PropTypes.shape({\n       title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      poster_path:  PropTypes.string,\n          \n    }).isRequired,\n  };","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const GalleryList = styled.ul`\n\n  @media screen and (min-width: 768px) {\n       display: flex;\n          flex-wrap: wrap;\n          gap: 25px;\n\n      }\n  margin-top: 0;\n  margin-bottom: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const GalleryItem = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 5px 5px 8px 1px rgba(112, 111, 111, 1);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);  \n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 25px)/2);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 2 * 25px)/3);\n  }\n\n  &:not(:last-child) {\n    @media screen and (max-width: calc(768px - 1px)) {\n      margin-bottom: 15px;\n    }\n  }\n\n  \n  :hover {\n  transform: scale(1.03);\n  cursor: pointer;\n\n  & p {\n    color: #fc458e;\n  }\n  \n}\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { MovieGalleryItem } from 'components/MovieGalleryItem';\n\n\nimport { GalleryItem, GalleryList, StyledLink } from './MovieGallery.styled';\n\n\nexport const MovieGallery = ({ movies, state }) => {\n  return (\n    <GalleryList>\n      {movies.map(movie => (\n        <GalleryItem key={movie.id}>\n          <StyledLink  to={`/movies/${movie.id}`} state ={state}>\n            <MovieGalleryItem movie={movie} />\n          </StyledLink>\n\n          \n        </GalleryItem>\n      ))}\n    </GalleryList>\n  )\n}\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n  state: PropTypes.object,\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {useSearchParams,useLocation} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate';\n\nimport { renderIcons } from 'utils/renderIcons';\nimport { iconSize } from 'constants';\n\n\nexport const Pagination = ({totalPages, onPageChange}) => {\n  const [searchParams] = useSearchParams();\n  const currentPage = Number(searchParams.get(\"page\")) - 1;\n  \n\n  return (\n    <div className=\"pagination-wrapper\">\n      <ReactPaginate\n      nextLabel={renderIcons('right', iconSize.sm)}\n      previousLabel={renderIcons('left', iconSize.sm)}\n        onPageChange={onPageChange}\n        pageRangeDisplayed={3}\n        initialPage={currentPage}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel={renderIcons('ellipsis', iconSize.sm)}\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination-container\"\n        activeLinkClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </div>\n    \n  )\n}\n\n\nPagination.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\n\n","export const iconSize = Object.freeze({\n  sm: 30,\n  md: 45,\n  lg: 80,\n});\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport {useSearchParams, useLocation} from \"react-router-dom\";\nimport * as API from 'services/api';\nimport { MovieGallery } from 'components/MovieGallery';\nimport { Pagination } from 'components/Pagination';\n\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isGalleryShown, setIsGalleryShown] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams({page: 1});\n  const queryValue = searchParams.get(\"query\");\n  const pageValue = searchParams.get(\"page\");\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovies(page) {\n      try {\n\n        const data= await API.getTrendingMovies(page);\n        const { results: movies, total_pages } = data;\n        setTotalPages(total_pages);\n        setMovies(movies);\n        setSearchParams({ page: pageValue});\n\n        setError(false);\n      } catch {\n        setError(true);\n      } finally {\n        setIsGalleryShown(true);\n      }\n    };\n    fetchMovies(pageValue);\n  }, [pageValue, setSearchParams]);\n\n\n  const onPageChange = e => {\n    setSearchParams({ page: e.selected + 1})\n  }\n\n  return (\n    <main>\n      <MovieGallery movies={movies} state={{ from: location }}></MovieGallery>\n      {isGalleryShown && movies.length !== 0 && \n        <Pagination totalPages={totalPages} onPageChange={onPageChange}></Pagination>\n      }\n      \n    </main>\n    \n  );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5e62b2453973c629f1496ace3a4b7719';\n\nexport async function getTrendingMovies(page) {\n  const result = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&&page=${page}`\n  );\n  return result.data;\n}\n\nexport async function getMoviesByQuery(query, page) {\n  const result = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&&page=${page}`\n  );\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n}\n\nexport async function getMovieCast(id) {\n  const result = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const result = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return result.data.results;\n}\n","import { TbMovie } from 'react-icons/tb';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { RiMovie2Fill } from 'react-icons/ri';\nimport { ImSearch } from 'react-icons/im';\nimport { FaRegSadCry } from 'react-icons/fa';\nimport { ImStarFull } from 'react-icons/im';\nimport { AiFillLike } from 'react-icons/ai';\nimport { AiFillDislike } from 'react-icons/ai';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { HiArrowNarrowRight } from 'react-icons/hi';\nimport { HiDotsHorizontal } from 'react-icons/hi';\n\nexport function renderIcons(param, size) {\n  switch (param) {\n    case 'movie':\n      return <TbMovie size={size} className=\"contact-form__icon\" />;\n    case 'back':\n      return <IoMdArrowRoundBack size={size} className=\"contact-form__icon\" />;\n    case 'film':\n      return <RiMovie2Fill size={size} className=\"contact-form__icon\" />;\n    case 'search':\n      return <ImSearch size={size} className=\"contact-form__icon\" />;\n    case 'error':\n      return <FaRegSadCry size={size} className=\"contact-form__icon\" />;\n    case 'star':\n      return (\n        <ImStarFull size={size} className=\"contact-form__icon full-star\" />\n      );\n    case 'like':\n      return <AiFillLike size={size} className=\"contact-form__icon like\" />;\n    case 'dislike':\n      return <AiFillDislike size={size} className=\"contact-form__icon like\" />;\n    case 'ellipsis':\n      return (\n        <HiDotsHorizontal size={size} className=\"contact-form__icon like\" />\n      );\n    case 'left':\n      return (\n        <HiArrowNarrowLeft size={size} className=\"contact-form__icon like\" />\n      );\n    case 'right':\n      return (\n        <HiArrowNarrowRight size={size} className=\"contact-form__icon like\" />\n      );\n    default:\n      return <span>icon</span>;\n  }\n}\n"],"names":["Movie","styled","MovieTitle","MovieYear","Rate","MovieGalleryItem","movie","poster_path","title","vote_average","release_date","releaseYear","parseInt","userScore","Math","round","src","alt","className","percent","animationOff","size","fontSize","fontWeight","fill","colorCircle","linearGradient","GalleryList","GalleryItem","StyledLink","Link","MovieGallery","movies","state","map","to","id","Pagination","totalPages","onPageChange","useSearchParams","searchParams","currentPage","Number","get","nextLabel","renderIcons","iconSize","previousLabel","pageRangeDisplayed","initialPage","marginPagesDisplayed","pageCount","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeLinkClassName","renderOnZeroPageCount","Object","freeze","sm","md","lg","useState","setMovies","setTotalPages","isGalleryShown","setIsGalleryShown","setError","page","setSearchParams","pageValue","location","useLocation","useEffect","API","data","results","total_pages","fetchMovies","from","length","e","selected","axios","API_KEY","getTrendingMovies","result","getMoviesByQuery","query","getMovieDetails","getMovieCast","cast","getMovieReviews","param"],"sourceRoot":""}