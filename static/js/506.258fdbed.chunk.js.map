{"version":3,"file":"static/js/506.258fdbed.chunk.js","mappings":"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","sources":["components/IconButton/IconButton.styled.jsx","components/IconButton/IconButton.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/Pagination/Pagination.jsx","constants/iconSize.js","pages/Movies/Movies.styled.jsx","utils/notifications.js","pages/Movies/Movies.jsx","services/api.js","utils/renderIcons.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const IconButtonStyled = styled.button`\n   display: flex;\n  column-gap: 10px;\n  min-width: 40px;\n  align-self: center;\n  align-items: center;\n  padding: 10px 30px;\n  background-color: #fde7f0;\n  color: black; \n  border: 5px solid transparent;\n  border-radius: 10px;\n  font-size: 20px;\n  font-weight: 800;\n  text-transform: uppercase;\n  box-shadow: 5px 5px 8px 1px rgba(112, 111, 111, 1);\n  cursor: pointer;\n  transition: 250ms background-color cubic-bezier(0.4, 0, 0.2, 1), 250ms color cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #f787b4;\n    color: white;\n  }\n`;","import PropTypes from 'prop-types';\nimport {\n  IconButtonStyled\n\n} from './IconButton.styled';\n\nexport function IconButton({children, onClick, ...allyProps }) {\n  return (\n    <IconButtonStyled type='button' onClick={onClick}  {...allyProps}>\n      {children}\n    </IconButtonStyled>\n  );\n}\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  'aria-label': PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\n\nexport const Movie = styled.img`\n  object-fit: cover;\n  border-radius: 2px;\n  width:370px;\n  height: 555px;\n  \n`;\n\nexport const MovieTitle = styled.p`\n  padding: 20px;\n  font-size: 26px;\n  font-weight: 900;\n  color: black;\n  text-align: center;\n  margin: 0;\n  flex-grow: 1;\n`;\nexport const MovieYear= styled.span`\n  background-color: #fc458e; \n  color: white;\n  font-size: 26px ;\n  font-weight: 700;\n  position: absolute;\n  top:0;\n  left: 0;\n  padding: 5px;\n  border-bottom-right-radius: 5px;\n  \n`;\n\nexport const Rate = styled.div`\n  position: absolute;\n  top:10px;\n  right: 10px;\n`   \n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgressBar } from \"@tomickigrzegorz/react-circular-progress-bar\";\nimport { Movie, MovieTitle,MovieYear, Rate} from \"./MovieGalleryItem.styled\"\n\n\nexport const MovieGalleryItem =({movie}) => {\n  const { poster_path, title, vote_average, release_date} = movie;\n  const releaseYear = release_date !== '' ? parseInt(release_date) : null;\n  const userScore = Math.round(vote_average * 10);\n  return (\n    <>\n      \n        <Movie\n            src={poster_path\n            ? `https://image.tmdb.org/t/p/original${poster_path}`\n            :  `https://img.freepik.com/free-vector/coming-soon-shop-announcement-vector_53876-57828.jpg`}\n            alt={`Movie ${title} poster`}\n        />\n\n      \n      <MovieTitle>{title} </MovieTitle>\n      {releaseYear && <MovieYear > {releaseYear} </MovieYear>}\n      {vote_average !== 0 &&\n        <Rate>\n          <CircularProgressBar\n          className='movie_rating'\n          percent={userScore}\n          animationOff='true'\n          size={60}\n          fontSize=\"28px\"\n          fontWeight={700}\n          fill=\"white\"\n          colorCircle='#e6e6e6s'\n          linearGradient={[\"red\", \"pink\"]}\n        />\n      </Rate>\n      }\n\n    </>\n    )\n\n}\n   MovieGalleryItem.propTypes = {\n    movie: PropTypes.shape({\n       title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      poster_path:  PropTypes.string,\n          \n    }).isRequired,\n  };","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const GalleryList = styled.ul`\n\n  @media screen and (min-width: 768px) {\n       display: flex;\n          flex-wrap: wrap;\n          gap: 25px;\n\n      }\n  margin-top: 0;\n  margin-bottom: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const GalleryItem = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 5px 5px 8px 1px rgba(112, 111, 111, 1);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);  \n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 25px)/2);\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 2 * 25px)/3);\n  }\n\n  &:not(:last-child) {\n    @media screen and (max-width: calc(768px - 1px)) {\n      margin-bottom: 15px;\n    }\n  }\n\n  \n  :hover {\n  transform: scale(1.03);\n  cursor: pointer;\n\n  & p {\n    color: #fc458e;\n  }\n  \n}\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { MovieGalleryItem } from 'components/MovieGalleryItem';\n\n\nimport { GalleryItem, GalleryList, StyledLink } from './MovieGallery.styled';\n\n\nexport const MovieGallery = ({ movies, state }) => {\n  return (\n    <GalleryList>\n      {movies.map(movie => (\n        <GalleryItem key={movie.id}>\n          <StyledLink  to={`/movies/${movie.id}`} state ={state}>\n            <MovieGalleryItem movie={movie} />\n          </StyledLink>\n\n          \n        </GalleryItem>\n      ))}\n    </GalleryList>\n  )\n}\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n  state: PropTypes.object,\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {useSearchParams,useLocation} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate';\n\nimport { renderIcons } from 'utils/renderIcons';\nimport { iconSize } from 'constants';\n\n\nexport const Pagination = ({totalPages, onPageChange}) => {\n  const [searchParams] = useSearchParams();\n  const currentPage = Number(searchParams.get(\"page\")) - 1;\n  \n\n  return (\n    <div className=\"pagination-wrapper\">\n      <ReactPaginate\n      nextLabel={renderIcons('right', iconSize.sm)}\n      previousLabel={renderIcons('left', iconSize.sm)}\n        onPageChange={onPageChange}\n        pageRangeDisplayed={3}\n        initialPage={currentPage}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel={renderIcons('ellipsis', iconSize.sm)}\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination-container\"\n        activeLinkClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </div>\n    \n  )\n}\n\n\nPagination.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\n\n","export const iconSize = Object.freeze({\n  sm: 30,\n  md: 45,\n  lg: 80,\n});\n","import styled from 'styled-components';\nimport { IconButton } from 'components/IconButton';\n\nexport const SearchFilter = styled.div`\n\n  display: flex;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  margin-bottom: 30px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 100%;\n  height: 70px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 10px;\n  overflow: hidden;\n  border: 4px solid #f787b4;\n`;\n\nexport const SearchFormButton = styled(IconButton)`\n    display: inline-block;\n    border: 0;\n    background-color: transparent;\n    border-radius: 0;\n    cursor: pointer;\n    outline: none;\n    height: 100%;\n    box-shadow: none;\n   \n`\nexport const SearchFormInput = styled.input`\n      height: 50px;\n      width: 100%;\n      height: 100%;\n      padding-left: 70px;\n      font-size: 24px;\n      font-weight: 600;\n      color: #f66fa5;\n      border: none;\n      outline: none;\n      padding-left: 20px;\n      padding-right: 4px;\n      ::placeholder {\n        font: inherit;\n        font-size: 24px;\n}\n` ;\n\n\nexport const List = styled.ul`\n  margin-left: 30px;\n`;\n\n","import { toast } from 'react-toastify';\n\nexport function showFailureNotification() {\n  return toast.error(\n    'Sorry, there are no movies  matching your search query. Please, try again.'\n  );\n}\n\nexport function showInfoNotification() {\n  return toast.info(\n    \"We're sorry, but you've reached the end of search results.\"\n  );\n}\n\nexport function showSuccessNotification(totalFoundMovies) {\n  return toast.success(`Hooray! We found ${totalFoundMovies} movies.`);\n}\n\nexport function showWarnNotification() {\n  return toast.warn(\n    `Sorry, you cannot make empty request. Please,write your request and try again`\n  );\n}\n","import React, { useState, useEffect,  useRef } from 'react';\nimport {useSearchParams,useLocation} from \"react-router-dom\";\nimport { SearchFilter, SearchForm, SearchFormButton, SearchFormInput } from './Movies.styled';\nimport { MovieGallery } from 'components/MovieGallery';\nimport { Pagination } from 'components/Pagination';\n\nimport { renderIcons } from 'utils/renderIcons';\nimport { iconSize } from 'constants';\nimport * as API from 'services/api'; \nimport * as Notification from 'utils/notifications';\n\nconst Movies = () => {\n   const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGalleryShown, setIsGalleryShown] = useState(false);\n  const [error, setError] = useState(false);\n\n  \n  const [totalPages, setTotalPages] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryValue = searchParams.get(\"query\");\n  const pageValue = searchParams.get(\"page\");\n\n  \n  const searchInputRef = useRef();\n  const location = useLocation();\n\n  useEffect(() => {\n\n    if (!queryValue) return;\n    \n    async function fetchMoviesByQuery(query, page) {\n      try {\n        setIsLoading(true);\n        const data = await API.getMoviesByQuery(query, page);\n        const { results: movies, total_pages, total_results } = data;\n\n        if (movies.length === 0) {\n         return Notification.showFailureNotification();\n        }\n        if (movies.length && pageValue === 1) {\n          Notification.showSuccessNotification(total_results);\n        }\n        setTotalPages(total_pages);\n        setSearchedMovies(movies);\n        setError(false);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n        setIsGalleryShown(true);\n      }\n    };\n\n    fetchMoviesByQuery(queryValue, pageValue);\n  }, [queryValue, pageValue]);\n\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    const movieQuery = searchInputRef.current.value;\n    \n      if (!movieQuery) {\n        setSearchParams({});\n        Notification.showWarnNotification();\n        return;\n      }\n      setSearchParams({ query: movieQuery, page: currentPage });\n    \n  }\n\n\n  const onPageChange = e => {\n    setSearchParams({ query: queryValue, page: e.selected + 1})\n  }\n\n\n  return (\n    <main>\n      <SearchFilter>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormInput\n            type=\"text\"\n            autocomplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie...\"\n            name=\"query\"\n            ref={searchInputRef}\n          />          \n          <SearchFormButton type='submit' aria-label='Search button'>\n            {renderIcons('search', iconSize.sm)}\n        </SearchFormButton>\n        </SearchForm>\n      </SearchFilter>\n      <MovieGallery movies={searchedMovies} state={{ from: location }}></MovieGallery>\n      {isGalleryShown && searchedMovies.length !== 0 && \n        <Pagination totalPages={totalPages} onPageChange={onPageChange} />\n      }\n\n\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5e62b2453973c629f1496ace3a4b7719';\n\nexport async function getTrendingMovies(page) {\n  const result = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&&page=${page}`\n  );\n  return result.data;\n}\n\nexport async function getMoviesByQuery(query, page) {\n  const result = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&&page=${page}`\n  );\n  return result.data;\n}\n\nexport async function getMovieDetails(id) {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n}\n\nexport async function getMovieCast(id) {\n  const result = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return result.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const result = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return result.data.results;\n}\n","import { TbMovie } from 'react-icons/tb';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { RiMovie2Fill } from 'react-icons/ri';\nimport { ImSearch } from 'react-icons/im';\nimport { FaRegSadCry } from 'react-icons/fa';\nimport { ImStarFull } from 'react-icons/im';\nimport { AiFillLike } from 'react-icons/ai';\nimport { AiFillDislike } from 'react-icons/ai';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { HiArrowNarrowRight } from 'react-icons/hi';\nimport { HiDotsHorizontal } from 'react-icons/hi';\n\nexport function renderIcons(param, size) {\n  switch (param) {\n    case 'movie':\n      return <TbMovie size={size} className=\"contact-form__icon\" />;\n    case 'back':\n      return <IoMdArrowRoundBack size={size} className=\"contact-form__icon\" />;\n    case 'film':\n      return <RiMovie2Fill size={size} className=\"contact-form__icon\" />;\n    case 'search':\n      return <ImSearch size={size} className=\"contact-form__icon\" />;\n    case 'error':\n      return <FaRegSadCry size={size} className=\"contact-form__icon\" />;\n    case 'star':\n      return (\n        <ImStarFull size={size} className=\"contact-form__icon full-star\" />\n      );\n    case 'like':\n      return <AiFillLike size={size} className=\"contact-form__icon like\" />;\n    case 'dislike':\n      return <AiFillDislike size={size} className=\"contact-form__icon like\" />;\n    case 'ellipsis':\n      return (\n        <HiDotsHorizontal size={size} className=\"contact-form__icon like\" />\n      );\n    case 'left':\n      return (\n        <HiArrowNarrowLeft size={size} className=\"contact-form__icon like\" />\n      );\n    case 'right':\n      return (\n        <HiArrowNarrowRight size={size} className=\"contact-form__icon like\" />\n      );\n    default:\n      return <span>icon</span>;\n  }\n}\n"],"names":["IconButtonStyled","styled","IconButton","children","onClick","allyProps","type","Movie","MovieTitle","MovieYear","Rate","MovieGalleryItem","movie","poster_path","title","vote_average","release_date","releaseYear","parseInt","userScore","Math","round","src","alt","className","percent","animationOff","size","fontSize","fontWeight","fill","colorCircle","linearGradient","GalleryList","GalleryItem","StyledLink","Link","MovieGallery","movies","state","map","to","id","Pagination","totalPages","onPageChange","useSearchParams","searchParams","currentPage","Number","get","nextLabel","renderIcons","iconSize","previousLabel","pageRangeDisplayed","initialPage","marginPagesDisplayed","pageCount","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeLinkClassName","renderOnZeroPageCount","Object","freeze","sm","md","lg","SearchFilter","SearchForm","SearchFormButton","SearchFormInput","showFailureNotification","toast","showSuccessNotification","totalFoundMovies","useState","searchedMovies","setSearchedMovies","setIsLoading","isGalleryShown","setIsGalleryShown","setError","setTotalPages","setSearchParams","queryValue","pageValue","searchInputRef","useRef","location","useLocation","useEffect","query","page","API","data","results","total_pages","total_results","length","Notification","fetchMoviesByQuery","onSubmit","e","preventDefault","movieQuery","current","value","autocomplete","autoFocus","placeholder","name","ref","from","selected","axios","API_KEY","getTrendingMovies","result","getMoviesByQuery","getMovieDetails","getMovieCast","cast","getMovieReviews","param"],"sourceRoot":""}